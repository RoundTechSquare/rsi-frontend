{"version":3,"sources":["components/home/Home.js","components/adminLogin/AdminLogin.js","components/adminDashboard/AdminDashboard.js","components/app/App.js","components/header/Header.js","index.js","logo.svg"],"names":["React","Component","CoinDescription","props","state","redirect","username","password","handlePasswordChange","bind","handleUsernameChange","login","this","window","location","href","protocol","hostname","port","event","setState","target","value","renderRedirect","onSubmit","onChange","type","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","status","document","title","AdminDashboard","selectedTab","bellActive","verified","filtersResult","price","min","max","on","volume","float","tabData","filters","marketCap","history","sortingDescending","alerts","alertsCopy","showNotifications","selectedDate","Date","updateFilters","updateFiltersResult","clearFiltersResult","updateAlertComment","handleMarketCapMinFilterChange","handleMarketCapMaxFilterChange","handleVolumeMinFilterChange","handleVolumeMaxFilterChange","handleAlertCommentChange","handlePriceMinFilterChange","handlePriceMaxFilterChange","handleFloatMinFilterChange","handleFloatMaxFilterChange","handleVolumeMinFilterChangeResult","handleVolumeMaxFilterChangeResult","handleFloatMinFilterChangeResult","handleFloatMaxFilterChangeResult","handlePriceMinFilterChangeResult","handlePriceMaxFilterChangeResult","handlePriceCheckboxChangeResult","handleVolumeCheckboxChangeResult","dateChanged","setSortedField","isValidAlert","alert","parseInt","priceFilters","floatFilters","volumeFilters","date","key","formattedDate","moment","format","sorted","sort","a","b","parseFloat","parse","sortDescending","reverse","timeframe","ticker","alertDate","index","comment","newAlerts","i","Object","keys","length","y","filter","x","averageVolume","to","params","data","json","result","groups","reduce","game","push","groupArrays","map","console","log","updatedHistory","obj","notificationsList","className","onClick","splice","width","active","animate","selected","onSelect","tab","getData","values","objects","timeframeIndex","formattedAlertTime","getHours","getMinutes","exchange","toFixed","toString","replace","socket","socketIOClient","query","token","Cookies","get","transport","getDate","getMonth","getFullYear","setTimeout","App","home","createRef","admin","id","path","component","AdminLogin","render","ref","exact","ReactDOM","getElementById","module","exports"],"mappings":"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","file":"static/js/main.95332b6c.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return <div>huj</div>;\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport logo from \"../../logo.svg\";\nimport \"./AdminLogin.css\";\nimport fetch from \"node-fetch\";\nimport {Redirect} from \"react-router-dom\";\n\nclass CoinDescription extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            redirect: false,\n            username: \"\",\n            password: \"\"\n        }\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\n        this.login = this.login.bind(this);\n    }\n\n\n    renderRedirect() {\n        if (this.state.redirect) {\n            //return <Redirect to=\"/admin/dashboard\" />\n            window.location.href = window.location.protocol + \"//\" + window.location.hostname + \":\" + window.location.port + \"/\";\n        }\n    }\n\n    handleUsernameChange(event) {\n        this.setState({\n            ...this.state,\n            username: event.target.value\n        });\n    }\n\n    handlePasswordChange(event) {\n        this.setState({\n            ...this.state,\n            password: event.target.value\n        });\n    }\n\n    render() {\n        const redirect = this.renderRedirect();\n        return (\n            <section>\n                {redirect}\n                <form onSubmit={this.login}>\n                    <label>\n                        <span>Username</span>\n                        <input value={this.state.username} onChange={this.handleUsernameChange} type=\"text\"></input>    \n                    </label>         \n                    <label>\n                        <span>Password</span>\n                        <input value={this.state.password} onChange={this.handlePasswordChange} type=\"text\"></input>    \n                    </label> \n                    <button type=\"submit\">Login</button>          \n                </form>\n            </section>\n        );\n    }\n\n    login(event) {\n        event.preventDefault();\n        fetch(window.location.protocol + \"//\" + window.location.hostname + \":\" + window.location.port + \"/api/admin/login\", {\n            method: \"POST\",\n            headers:{\"content-type\": \"application/json\"},\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password\n            })\n        }).then(response => {\n            if(response.status === 200) {\n                this.setState({\n                    ...this.state,\n                    redirect: true\n                });\n            }\n        });\n    }\n    \n\n    componentDidMount() {\n        document.title = \"Admin Login - WhatsThisCrypto\";\n\n        fetch(window.location.protocol + \"//\" + window.location.hostname + \":\" + window.location.port + \"/api/admin/ping\")\n            .then(response => {\n                if(response.status === 200 && this.state.redirect !== true) {\n                    this.setState({\n                        ...this.state,\n                        redirect: true\n                    });\n                }\n            });\n\n    }\n\n\n}\n\nexport default CoinDescription;\n","import React from \"react\";\nimport logo from \"../../logo.svg\";\nimport \"./AdminDashboard.css\";\nimport fetch from \"node-fetch\";\nimport { Redirect } from \"react-router-dom\";\nimport \"react-input-range/lib/css/index.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport socketIOClient from \"socket.io-client\";\nimport Cookies from \"js-cookie\";\nimport BellIcon from \"react-bell-icon\";\nimport moment from \"moment\";\n\nconst TIMEFRAMES = [\"60min\", \"4h\", \"1d\", \"1w\"];\n\nclass AdminDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTab: \"60min\",\n      bellActive: false,\n      redirect: false,\n      verified: false,\n      filtersResult: {\n        price: { min: 1, max: 10000000, on: false },\n        volume: { min: 1, max: 1000000, on: false },\n        float: { min: 1, max: 1000000, on: false },\n      },\n      tabData: [],\n      filters: {\n        \"60min\": {\n          marketCap: {\n            min: 50,\n            max: 100,\n          },\n          price: {\n            min: 1,\n            max: 2,\n          },\n          volume: {\n            min: 1,\n            max: 2,\n          },\n        },\n        \"4h\": {\n          marketCap: {\n            min: 50,\n            max: 100,\n          },\n          price: {\n            min: 1,\n            max: 2,\n          },\n          volume: {\n            min: 1,\n            max: 2,\n          },\n        },\n        \"1d\": {\n          marketCap: {\n            min: 50,\n            max: 100,\n          },\n          price: {\n            min: 1,\n            max: 2,\n          },\n          volume: {\n            min: 1,\n            max: 2,\n          },\n        },\n        \"1w\": {\n          marketCap: {\n            min: 50,\n            max: 100,\n          },\n          price: {\n            min: 1,\n            max: 2,\n          },\n          volume: {\n            min: 1,\n            max: 2,\n          },\n        },\n        \"1m\": {\n          marketCap: {\n            min: 50,\n            max: 100,\n          },\n          price: {\n            min: 1,\n            max: 2,\n          },\n          volume: {\n            min: 1,\n            max: 2,\n          },\n        },\n        \"3m\": {\n          marketCap: {\n            min: 50,\n            max: 100,\n          },\n          price: {\n            min: 1,\n            max: 2,\n          },\n          volume: {\n            min: 1,\n            max: 2,\n          },\n        },\n      },\n      history: {\n        \"60min\": {},\n        \"4h\": {},\n        \"1d\": {},\n        \"1w\": {},\n        \"3m\": {},\n        \"1m\": {},\n      },\n      sortingDescending: true,\n      alerts: [],\n      alertsCopy: [],\n      showNotifications: false,\n      selectedDate: new Date(),\n    };\n    this.updateFilters = this.updateFilters.bind(this);\n    this.updateFiltersResult = this.updateFiltersResult.bind(this);\n    this.clearFiltersResult = this.clearFiltersResult.bind(this);\n    this.updateAlertComment = this.updateAlertComment.bind(this);\n    this.handleMarketCapMinFilterChange =\n      this.handleMarketCapMinFilterChange.bind(this);\n    this.handleMarketCapMaxFilterChange =\n      this.handleMarketCapMaxFilterChange.bind(this);\n\n    this.handleVolumeMinFilterChange =\n      this.handleVolumeMinFilterChange.bind(this);\n    this.handleVolumeMaxFilterChange =\n      this.handleVolumeMaxFilterChange.bind(this);\n    this.handleAlertCommentChange = this.handleAlertCommentChange.bind(this);\n    this.handlePriceMinFilterChange =\n      this.handlePriceMinFilterChange.bind(this);\n    this.handlePriceMaxFilterChange =\n      this.handlePriceMaxFilterChange.bind(this);\n    this.handleFloatMinFilterChange =\n      this.handleFloatMinFilterChange.bind(this);\n    this.handleFloatMaxFilterChange =\n      this.handleFloatMaxFilterChange.bind(this);\n\n    this.handleVolumeMinFilterChangeResult =\n      this.handleVolumeMinFilterChangeResult.bind(this);\n    this.handleVolumeMaxFilterChangeResult =\n      this.handleVolumeMaxFilterChangeResult.bind(this);\n\n    this.handleFloatMinFilterChangeResult =\n      this.handleFloatMinFilterChangeResult.bind(this);\n    this.handleFloatMaxFilterChangeResult =\n      this.handleFloatMaxFilterChangeResult.bind(this);\n\n    this.handlePriceMinFilterChangeResult =\n      this.handlePriceMinFilterChangeResult.bind(this);\n    this.handlePriceMaxFilterChangeResult =\n      this.handlePriceMaxFilterChangeResult.bind(this);\n\n    this.handlePriceCheckboxChangeResult =\n      this.handlePriceCheckboxChangeResult.bind(this);\n    this.handleVolumeCheckboxChangeResult =\n      this.handleVolumeCheckboxChangeResult.bind(this);\n\n    this.dateChanged = this.dateChanged.bind(this);\n    this.setSortedField = this.setSortedField.bind(this);\n    this.isValidAlert = this.isValidAlert.bind(this);\n  }\n\n  isValidAlert(alert) {\n    if (!alert.float) {\n      return false;\n    }\n    let filters = this.state.filters;\n    if (\n      parseInt(alert.float) <\n        parseInt(filters[this.state.selectedTab].float.min) ||\n      parseInt(alert.float) >\n        parseInt(filters[this.state.selectedTab].float.max)\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  handlePriceCheckboxChangeResult() {\n    let priceFilters = this.state.filtersResult;\n    priceFilters.price.on = !priceFilters.price.on;\n    this.setState({\n      ...this.state,\n      filtersResult: priceFilters,\n    });\n  }\n\n  handleFloatCheckboxChangeResult() {\n    let floatFilters = this.state.filtersResult;\n    floatFilters.float.on = !floatFilters.price.on;\n    this.setState({\n      ...this.state,\n      filtersResult: floatFilters,\n    });\n  }\n\n  handleVolumeCheckboxChangeResult() {\n    let volumeFilters = this.state.filtersResult;\n    volumeFilters.volume.on = !volumeFilters.price.on;\n    this.setState({\n      ...this.state,\n      filtersResult: volumeFilters,\n    });\n  }\n\n  dateChanged(date) {\n    this.setState({\n      ...this.state,\n      selectedDate: date,\n    });\n  }\n\n  clearFiltersResult() {\n    this.setState({\n      ...this.state,\n      history: this.state.alertsCopy,\n    });\n  }\n\n  setSortedField(key) {\n    // const selectedDate = this.state.selectedDate;\n    const formattedDate = moment(this.state.selectedDate).format('DD-MM-yyyy')\n\n\n    let sorted = this.state.history[this.state.selectedTab][formattedDate];\n    let history = this.state.history;\n    sorted.sort((a, b) => {\n      if (a[key]) {\n        if (b[key])  \n          if (key === \"date\")\n            return (\n              parseFloat(Date.parse(a[key])) - parseFloat(Date.parse(b[key]))\n            );\n          else if (key === \"type\" || key === \"ticker\") {\n            if (a[key] < b[key]) return -1;\n            else if (a[key] > b[key]) return 1;\n          } else return parseFloat(a[key]) - parseFloat(b[key]);\n        else return 1;\n      } else if (b[key]) {\n        return -1;\n      }\n      return 0;\n    });\n    if (this.state.sortDescending) {\n      sorted.reverse();\n    }\n    this.state.history[this.state.selectedTab][formattedDate] = sorted;\n    this.setState({\n      ...this.state,\n      history,\n      sortDescending: !this.state.sortDescending,\n    });\n  }\n\n  updateAlertComment(timeframe, date, ticker, alertDate, index) {\n    fetch(\n      window.location.protocol +\n        \"//\" +\n        window.location.hostname +\n        \":\" +\n        window.location.port +\n        \"/api/admin/scanner/stocks/updateComment?timeframe=\" +\n        timeframe +\n        \"&date=\" +\n        date +\n        \"&ticker=\" +\n        ticker +\n        \"&alertDate=\" +\n        alertDate,\n      {\n        method: \"post\",\n        body: JSON.stringify(this.state.history[timeframe][date][index]),\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n\n  handleAlertCommentChange(timeframe, date, index, value) {\n    let state = this.state;\n    state.history[timeframe][date][index].comment = value;\n    this.setState(state);\n  }\n  handleMarketCapMinFilterChange(value) {\n    let filters = this.state.filters;\n    if (value.target.value === \"\") {\n      value.target.value = \"0\";\n    }\n    filters[this.state.selectedTab].marketCap.min = parseInt(\n      value.target.value\n    );\n    this.setState({\n      ...this.state,\n      filters,\n    });\n  }\n  handleMarketCapMaxFilterChange(value) {\n    let filters = this.state.filters;\n    if (value.target.value === \"\") {\n      value.target.value = \"0\";\n    }\n    filters[this.state.selectedTab].marketCap.max = parseInt(\n      value.target.value\n    );\n    this.setState({\n      ...this.state,\n      filters,\n    });\n  }\n\n  handleVolumeMinFilterChange(value) {\n    let filters = this.state.filters;\n    if (value.target.value === \"\") {\n      value.target.value = \"0\";\n    }\n    filters[this.state.selectedTab].volume.min = parseInt(value.target.value);\n    this.setState({\n      ...this.state,\n      filters,\n    });\n  }\n  handleVolumeMaxFilterChange(value) {\n    let filters = this.state.filters;\n    if (value.target.value === \"\") {\n      value.target.value = \"0\";\n    }\n    filters[this.state.selectedTab].volume.max = parseInt(value.target.value);\n    this.setState({\n      ...this.state,\n      filters,\n    });\n  }\n\n  handlePriceMinFilterChange(value) {\n    let filters = this.state.filters;\n    if (value.target.value === \"\") {\n      value.target.value = \"0\";\n    }\n    filters[this.state.selectedTab].price.min = parseInt(value.target.value);\n    this.setState({\n      ...this.state,\n      filters,\n    });\n  }\n  handlePriceMaxFilterChange(value) {\n    let filters = this.state.filters;\n    if (value.target.value === \"\") {\n      value.target.value = \"0\";\n    }\n    filters[this.state.selectedTab].price.max = parseInt(value.target.value);\n    this.setState({\n      ...this.state,\n      filters,\n    });\n  }\n\n  handleFloatMinFilterChange(value) {\n    let filters = this.state.filters;\n    if (value.target.value === \"\") {\n      value.target.value = \"0\";\n    }\n    filters[this.state.selectedTab].float.min = parseInt(value.target.value);\n    this.setState({\n      ...this.state,\n      filters,\n    });\n  }\n  handleFloatMaxFilterChange(value) {\n    let filters = this.state.filters;\n    if (value.target.value === \"\") {\n      value.target.value = \"0\";\n    }\n    filters[this.state.selectedTab].float.max = parseInt(value.target.value);\n    this.setState({\n      ...this.state,\n      filters,\n    });\n  }\n\n  handleFloatMinFilterChangeResult(value) {\n    let filtersResult = this.state.filtersResult;\n    if (value.target.value === \"\") {\n      value.target.value = \"0\";\n    }\n    filtersResult.float.min = parseInt(value.target.value);\n    this.setState({\n      ...this.state,\n      filtersResult,\n    });\n  }\n  handleFloatMaxFilterChangeResult(value) {\n    let filtersResult = this.state.filtersResult;\n    if (value.target.value === \"\") {\n      value.target.value = \"0\";\n    }\n    filtersResult.float.max = parseInt(value.target.value);\n    this.setState({\n      ...this.state,\n      filtersResult,\n    });\n  }\n  handleVolumeMinFilterChangeResult(value) {\n    let filtersResult = this.state.filtersResult;\n    if (value.target.value === \"\") {\n      value.target.value = \"0\";\n    }\n    filtersResult.volume.min = parseInt(value.target.value);\n    this.setState({\n      ...this.state,\n      filtersResult,\n    });\n  }\n  handleVolumeMaxFilterChangeResult(value) {\n    let filtersResult = this.state.filtersResult;\n    if (value.target.value === \"\") {\n      value.target.value = \"0\";\n    }\n    filtersResult.volume.max = parseInt(value.target.value);\n    this.setState({\n      ...this.state,\n      filtersResult,\n    });\n  }\n\n  handlePriceMinFilterChangeResult(value) {\n    let filtersResult = this.state.filtersResult;\n    if (value.target.value === \"\") {\n      value.target.value = \"0\";\n    }\n    filtersResult.price.min = parseInt(value.target.value);\n    this.setState({\n      ...this.state,\n      filtersResult,\n    });\n  }\n  handlePriceMaxFilterChangeResult(value) {\n    let filtersResult = this.state.filtersResult;\n    if (value.target.value === \"\") {\n      value.target.value = \"0\";\n    }\n    filtersResult.price.max = parseInt(value.target.value);\n    this.setState({\n      ...this.state,\n      filtersResult,\n    });\n  }\n\n  updateFilters(event) {\n    event.preventDefault();\n    fetch(\n      window.location.protocol +\n        \"//\" +\n        window.location.hostname +\n        \":\" +\n        window.location.port +\n        \"/api/admin/scanner/filters/update?timeframe=\" +\n        this.state.selectedTab,\n      {\n        method: \"post\",\n        body: JSON.stringify(this.state.filters[this.state.selectedTab]),\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    );\n  }\n\n  updateFiltersResult(event) {\n    event.preventDefault();\n    const alerts = this.state.alertsCopy;\n    let filters = this.state.filtersResult;\n    let newAlerts = {};\n\n    for (let i = 0; i < Object.keys(alerts).length; i++) {    \n      const timeframe = alerts[Object.keys(alerts)[i]];\n      newAlerts[Object.keys(alerts)[i]] = {};\n      for (let y = 0; y < Object.keys(timeframe).length; y++) {\n        let date = timeframe[Object.keys(timeframe)[y]];\n\n        date = date.filter((x) => {\n          if (x.price) x.price = parseFloat(x.price);\n          if (x.averageVolume) x.volume = parseFloat(x.averageVolume);\n          return (\n            (x.price || !filters.price.on) &&\n            (x.volume || !filters.volume.on) &&\n            ((x.price >= filters.price.min && x.price <= filters.price.max) ||\n              !filters.price.on) &&\n            ((x.volume >= filters.volume.min &&\n              x.volume <= filters.volume.max) ||\n              !filters.volume.on)\n          );\n        });\n        newAlerts[Object.keys(alerts)[i]][Object.keys(timeframe)[y]] = date;\n      }\n    }\n    this.setState({\n      ...this.state,\n      alertsCopy: alerts,\n      history: newAlerts,\n    });\n  }\n\n  renderRedirect() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/login\" />;\n    }\n  }\n\n  async getData(params) {\n    const data = await fetch(`http://iodigitalbot.com/api/data?tf=${params}`);\n    const result = await data.json();\n    // console.log(result, this.state.history);\n    // this gives an object with dates as keys\n    const groups = result.reduce((groups, game) => {\n      // console.log(groups,game)\n      let date = moment(game.date).format(\"DD-MM-yyyy\");\n      if (!groups[date]) {\n        groups[date] = [];\n      }\n      groups[date].push(game);\n      return groups;\n    }, {});\n\n    // Edit: to add it in the array format instead\n    const groupArrays = Object.keys(groups).map((date) => {\n      return {\n        date,\n        data: groups[date],\n      };\n    });\n    console.log(groupArrays)\n    let updatedHistory = []\n    groupArrays.map((obj)=>{\n      if(obj !== \"Invalid date\"){\n        updatedHistory[`${obj.date}`] = obj.data\n      }\n    })\n    this.state.history[params] = updatedHistory;\n    this.setState({\n      ...this.state,\n      alerts: this.state.history,\n      alertsCopy: this.state.history,\n\n    });\n  }\n  render() {\n    const redirect = this.renderRedirect();\n    let notificationsList;\n    if (this.state.showNotifications) {\n      notificationsList = (\n        <section className=\"notificationsList\">\n          <h2>Notifications:</h2>\n          {this.state.alerts.map((alert, index) => {\n            return (\n              <div key={index}>\n                <p>\n                  {alert.ticker} on {alert.timeframe}\n                </p>\n                <button\n                  onClick={() => {\n                    let alerts = this.state.alerts;\n                    alerts.splice(index, 1);\n                    this.setState({\n                      ...this.state,\n                      alerts,\n                    });\n                  }}\n                >\n                  Remove\n                </button>\n              </div>\n            );\n          })}\n        </section>\n      );\n    }\n    return (\n      <section className=\"container\">\n        {redirect}\n        <div className=\"heading\">\n          <h1 className=\"adminDashboardTitle\">Admin Dashboard</h1>\n          <BellIcon\n            className=\"bellIcon\"\n            // onClick={() => {\n            //   this.setState({\n            //     ...this.state,\n            //     showNotifications: !this.state.showNotifications,\n            //   });\n            // }}\n            width=\"40\"\n            active={this.state.bellActive}\n            animate={this.state.bellActive}\n          />\n          {notificationsList}\n        </div>\n        <form onSubmit={this.updateFilters}>\n          <div className=\"allFiltersContainer\">\n            <section className=\"filtersSection\">\n              <label>\n                <span>Min Market Captialisation</span>\n                <input\n                  type=\"number\"\n                  max={this.state.filters[this.state.selectedTab].marketCap.max}\n                  value={\n                    this.state.filters[this.state.selectedTab].marketCap.min\n                  }\n                  onChange={this.handleMarketCapMinFilterChange}\n                ></input>\n              </label>\n              <label>\n                <span>Max Market Captialisation</span>\n                <input\n                  type=\"number\"\n                  min={this.state.filters[this.state.selectedTab].marketCap.min}\n                  value={\n                    this.state.filters[this.state.selectedTab].marketCap.max\n                  }\n                  onChange={this.handleMarketCapMaxFilterChange}\n                ></input>\n              </label>\n            </section>\n\n            <section className=\"filtersSection\">\n              <label>\n                <span>Min Average Volume</span>\n                <input\n                  type=\"number\"\n                  max={this.state.filters[this.state.selectedTab].volume.max}\n                  value={this.state.filters[this.state.selectedTab].volume.min}\n                  onChange={this.handleVolumeMinFilterChange}\n                ></input>\n              </label>\n              <label>\n                <span>Max Average Volume</span>\n                <input\n                  type=\"number\"\n                  min={this.state.filters[this.state.selectedTab].volume.min}\n                  value={this.state.filters[this.state.selectedTab].volume.max}\n                  onChange={this.handleVolumeMaxFilterChange}\n                ></input>\n              </label>\n            </section>\n\n            <section className=\"filtersSection\">\n              <label>\n                <span>Min Price</span>\n                <input\n                  type=\"number\"\n                  max={this.state.filters[this.state.selectedTab].price.max}\n                  value={this.state.filters[this.state.selectedTab].price.min}\n                  onChange={this.handlePriceMinFilterChange}\n                ></input>\n              </label>\n              <label>\n                <span>Max Price</span>\n                <input\n                  type=\"number\"\n                  min={this.state.filters[this.state.selectedTab].price.min}\n                  value={this.state.filters[this.state.selectedTab].price.max}\n                  onChange={this.handlePriceMaxFilterChange}\n                ></input>\n              </label>\n            </section>\n\n            <section className=\"filtersSection\">\n              <label>\n                <span>Min Float</span>\n                <input\n                  type=\"number\"\n                  max={this.state.filters[this.state.selectedTab].float?.max}\n                  value={this.state.filters[this.state.selectedTab].float?.min}\n                  onChange={this.handleFloatMinFilterChange}\n                ></input>\n              </label>\n              <label>\n                <span>Max Float</span>\n                <input\n                  type=\"number\"\n                  min={this.state.filters[this.state.selectedTab].float?.min}\n                  value={this.state.filters[this.state.selectedTab].float?.max}\n                  onChange={this.handleFloatMaxFilterChange}\n                ></input>\n              </label>\n            </section>\n          </div>\n\n          <button className=\"updateFiltersButton\" type=\"submit\">\n            Update filters\n          </button>\n        </form>\n        <form onSubmit={this.updateFiltersResult}>\n          <div className=\"allFiltersContainer\">\n            <section className=\"filtersSection\">\n              <label>\n                <span>Enable filtering alerts by float</span>\n                <input\n                  type=\"checkbox\"\n                  onClick={this.handleVolumeCheckboxChangeResult}\n                />\n              </label>\n              <label>\n                <span>Min Float</span>\n                <input\n                  type=\"number\"\n                  max={this.state.filtersResult.float.max}\n                  value={this.state.filtersResult.float.min}\n                  onChange={this.handleFloatMinFilterChangeResult}\n                ></input>\n              </label>\n              <label>\n                <span>Max Float</span>\n                <input\n                  type=\"number\"\n                  min={this.state.filtersResult.float.min}\n                  value={this.state.filtersResult.float.max}\n                  onChange={this.handleFloatMaxFilterChangeResult}\n                ></input>\n              </label>\n            </section>\n            <section className=\"filtersSection\">\n              <label>\n                <span>Enable filtering alerts by volume</span>\n                <input\n                  type=\"checkbox\"\n                  onClick={this.handleVolumeCheckboxChangeResult}\n                />\n              </label>\n              <label>\n                <span>Min Average Volume</span>\n                <input\n                  type=\"number\"\n                  max={this.state.filtersResult.volume.max}\n                  value={this.state.filtersResult.volume.min}\n                  onChange={this.handleVolumeMinFilterChangeResult}\n                ></input>\n              </label>\n              <label>\n                <span>Max Average Volume</span>\n                <input\n                  type=\"number\"\n                  min={this.state.filtersResult.volume.min}\n                  value={this.state.filtersResult.volume.max}\n                  onChange={this.handleVolumeMaxFilterChangeResult}\n                ></input>\n              </label>\n            </section>\n\n            <section className=\"filtersSection\">\n              <label>\n                <span>Enable filtering alerts by price</span>\n                <input\n                  type=\"checkbox\"\n                  onClick={this.handlePriceCheckboxChangeResult}\n                />\n              </label>\n              <label>\n                <span>Min Price</span>\n                <input\n                  type=\"number\"\n                  max={this.state.filtersResult.price.max}\n                  value={this.state.filtersResult.price.min}\n                  onChange={this.handlePriceMinFilterChangeResult}\n                ></input>\n              </label>\n              <label>\n                <span>Max Price</span>\n                <input\n                  type=\"number\"\n                  min={this.state.filtersResult.price.min}\n                  value={this.state.filtersResult.price.max}\n                  onChange={this.handlePriceMaxFilterChangeResult}\n                ></input>\n              </label>\n            </section>\n          </div>\n\n          <button className=\"updateFiltersButton\" type=\"submit\">\n            Update filters\n          </button>\n\n          <button\n            type=\"reset\"\n            className=\"updateFiltersButton\"\n            onClick={this.clearFiltersResult}\n          >\n            Clear alerts filters\n          </button>\n        </form>\n        <h1>Results filter</h1>\n        <section>\n          <DatePicker\n            selected={this.state.selectedDate}\n            onChange={this.dateChanged}\n          />\n          <Tabs\n            onSelect={(tab) => {\n              this.setState({\n                ...this.state,\n                selectedTab: Object.keys(this.state.history)[tab],\n              });\n            }}\n          >\n            <TabList>\n              {Object.keys(this.state.history).map((timeframe) => {\n                return (\n                  <Tab\n                    onClick={() => {\n                      this.getData(timeframe);\n                    }}\n                    key={timeframe}\n                  >\n                    {timeframe}\n                  </Tab>\n                );\n              })}\n            </TabList>\n\n            {Object.values(this.state.history).map(\n              (objects, timeframeIndex) => {\n                const formattedDate = moment(this.state.selectedDate).format('DD-MM-yyyy')\n                if (!objects[formattedDate]) {\n                  return (\n                    <TabPanel key={timeframeIndex}>\n                      <p>No alerts for selected date.</p>\n                    </TabPanel>\n                  );\n                }\n                return (\n                  <TabPanel key={timeframeIndex}>\n                    <table className=\"alertsTable\">\n                      <thead>\n                        <tr>\n                          <th>\n                            <button\n                              type=\"button\"\n                              onClick={() => this.setSortedField(\"date\")}\n                            >\n                              Time\n                            </button>\n                          </th>\n                          <th>\n                            <button\n                              type=\"button\"\n                              onClick={() => this.setSortedField(\"type\")}\n                            >\n                              Signal\n                            </button>\n                          </th>\n                          <th>\n                            <button\n                              type=\"button\"\n                              onClick={() => this.setSortedField(\"ticker\")}\n                            >\n                              Symbol\n                            </button>\n                          </th>\n                          <th>\n                            <button\n                              type=\"button\"\n                              onClick={() => this.setSortedField(\"price\")}\n                            >\n                              Price\n                            </button>\n                          </th>\n                          <th>\n                            <button\n                              type=\"button\"\n                              onClick={() =>\n                                this.setSortedField(\"averageVolume\")\n                              }\n                            >\n                              Volume\n                            </button>\n                          </th>\n                          <th>\n                            <button\n                              type=\"button\"\n                              onClick={() => this.setSortedField(\"date\")}\n                            >\n                              Float\n                            </button>\n                          </th>\n                        </tr>\n                        {/* {JSON.stringify(this.state)} */}\n                      </thead>\n                      {/* <div>aas</div> */}\n                      <tbody>\n                        {objects[formattedDate].map((alert, index) => {\n                          let formattedAlertTime = new Date(alert.date);\n                          formattedAlertTime =\n                            formattedAlertTime.getHours() +\n                            \":\" +\n                            formattedAlertTime.getMinutes();\n                          const timeframe = Object.keys(this.state.history)[\n                            timeframeIndex\n                          ];\n\n                          return (\n                            <tr key={index}>\n                              <td>Bar close on {formattedAlertTime} UTC</td>\n                              <td>Hidden {alert.type} divergence</td>\n                              <td>\n                                <a\n                                  target=\"_blank\"\n                                  href={\n                                    \"https://www.tradingview.com/chart/?symbol=\" +\n                                    alert.exchange +\n                                    \":\" +\n                                    alert.ticker\n                                  }\n                                >\n                                  {alert.ticker}\n                                </a>\n                              </td>\n                              <td>{alert.price}</td>\n                              <td>\n                                {alert.averageVolume\n                                  ? alert.averageVolume\n                                      .toFixed(0)\n                                      .toString()\n                                      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                                  : \"\"}\n                              </td>\n                              <td>{alert.float}</td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </table>\n                  </TabPanel>\n                );\n              }\n            )}\n          </Tabs>\n        </section>\n      </section>\n    );\n  }\n\n  componentDidMount() {\n    document.title = \"Admin Dashboard - WhatsThisCrypto\";\n    const socket = socketIOClient(\n      \"ws://\" + window.location.hostname + \":3000\",\n      {\n        query: {\n          token: Cookies.get(\"token\"),\n        },\n        transport: [\"websocket\"],\n      }\n    );\n    socket.on(\"connect\", () => {\n      console.log(\"connected\");\n    });\n    socket.on(\"message\", (alert) => {\n      let history = this.state.history;\n      let formattedDate = new Date();\n      formattedDate =\n        formattedDate.getDate() +\n        \"-\" +\n        parseInt(formattedDate.getMonth() + 1) +\n        \"-\" +\n        formattedDate.getFullYear();\n      if (!history[alert.timeframe][formattedDate])\n        history[alert.timeframe][formattedDate] = [];\n      history[alert.timeframe][formattedDate].push({\n        ticker: alert.ticker,\n        type: alert.type,\n        exchange: alert.exchange,\n        date: alert.date,\n        comment: \"\",\n      });\n      let alerts = this.state.alerts;\n      alerts.push({\n        ticker: alert.ticker,\n        timeframe: alert.timeframe,\n      });\n\n      this.setState({\n        ...this.state,\n        history,\n        alertsCopy: history,\n        bellActive: true,\n        alerts,\n      });\n      setTimeout(() => {\n        this.updateFiltersResult();\n      }, 1000);\n      setTimeout(() => {\n        this.setState({\n          ...this.state,\n          bellActive: false,\n        });\n      }, 5000);\n    });\n    // fetch(\n    //   window.location.protocol +\n    //     '//' +\n    //     window.location.hostname +\n    //     ':' +\n    //     window.location.port +\n    //     '/api/admin/ping'\n    // ).then((response) => {\n    //   if (response.status === 401 && this.state.redirect !== true) {\n    //     this.setState({\n    //       ...this.state,\n    //       redirect: true,\n    //     });\n    //   } else if (response.status === 200) {\n    //     fetch(\n    //       window.location.protocol +\n    //         '//' +\n    //         window.location.hostname +\n    //         ':' +\n    //         window.location.port +\n    //         '/api/admin/scanner/filters'\n    //     )\n    //       .then((result) => result.json())\n    //       .then((result) => {\n    //         console.log(result, 'RESULT');\n    //         this.setState({\n    //           ...this.state,\n    //           verified: true,\n    //           filters: result,\n    //         });\n    //       });\n    //     fetch(\n    //       window.location.protocol +\n    //         '//' +\n    //         window.location.hostname +\n    //         ':' +\n    //         window.location.port +\n    //         '/api/admin/scanner/history'\n    //     )\n    //       .then((result) => result.json())\n    //       .then((result) => {\n    //         console.log('test');\n    //         console.log(result);\n    //         this.setState({\n    //           ...this.state,\n    //           history: result,\n    //           alertsCopy: result,\n    //         });\n    //       });\n    //   }\n    // });\n    this.getData(\"60min\");\n    console.log(\"state\", this.state);\n  }\n}\n\nexport default AdminDashboard;\n","import React from \"react\";\nimport { Route, Link, BrowserRouter as Router, Redirect } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"../home/Home\";\nimport AdminLogin from \"../adminLogin/AdminLogin\";\nimport AdminDashboard from \"../adminDashboard/AdminDashboard\";\nimport Header from \"../header/Header\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirect: false\n        };\n        this.home = React.createRef();\n        this.admin = React.createRef();\n    }\n    render() {\n        let redirect;\n        if(this.state.redirect) {\n            redirect = (<Redirect to=\"/\"/>)\n        }\n        return (\n            <div>\n                <Router>\n                    <div className=\"app\">\n                        {redirect}\n                        <div id=\"pageMask\"/>\n                        <div className=\"content\">\n                            <Route path=\"/login\" component={AdminLogin} />\n                            <Route path=\"/\" render={(props) => <AdminDashboard ref={this.admin} {...props} />} exact/>\n                        </div>\n                    </div>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport { Link} from \"react-router-dom\";\nimport \"./Header.css\";\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n       return <div></div>\n        \n    }\n\n   \n}\n\nexport default Header;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./components/app/App\";\n\nReactDOM.render(\n    <App/>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}